# policy.2
# Defines the policies under each sections


# Defines organizations referred from the profiles
Organizations:
  - &Orderer
    Name: Orderer
    ID: OrdererMSP
    MSPDir: ./crypto-config/ordererOrganizations/acme.com/msp
    Policies: &OrdererPolicies
      Readers:
          Type: Signature
          Rule: "OR('OrdererMSP.member')"
          # If your MSP is configured with the new NodeOUs, you might
          # want to use a more specific rule like the following:
          # Rule: "OR('SampleOrg.admin', 'SampleOrg.peer', 'SampleOrg.client')"
      Writers:
          Type: Signature
          Rule: "OR('OrdererMSP.member')"
          # If your MSP is configured with the new NodeOUs, you might
          # want to use a more specific rule like the following:
          # Rule: "OR('SampleOrg.admin', 'SampleOrg.client')"
      Admins:
          Type: Signature
          Rule: "OR('OrdererMSP.member')"
          #Rule: "OR('OrdererMSP.member','Org1MSP.member')"
          
   

  - &Org1
    Name: Org1
    ID: Org1MSP
    MSPDir:  ./crypto-config/peerOrganizations/acme.com/msp
    AnchorPeers:
      - Host: localhost
        Port: 7051
    Policies: &Org1Policies
      Readers:
          Type: Signature
          Rule: "OR('Org1MSP.member')"
          # If your MSP is configured with the new NodeOUs, you might
          # want to use a more specific rule like the following:
          # Rule: "OR('SampleOrg.admin', 'SampleOrg.peer', 'SampleOrg.client')"
      Writers:
          Type: Signature
          Rule: "OR('Org1MSP.member')"
          # If your MSP is configured with the new NodeOUs, you might
          # want to use a more specific rule like the following:
          # Rule: "OR('SampleOrg.admin', 'SampleOrg.client')"
      Admins:
          Type: Signature
          #Rule: "OR('OrdererMSP.member','Org1MSP.member')"
          Rule: "OR('Org1MSP.member')"
    
# Configuration for the Orderer
Orderer: &OrdererDefaults

    # Orderer Type: The orderer implementation to start.
    # Available types are "solo" and "kafka".
    OrdererType: solo

    # Addresses here is a nonexhaustive list of orderers the peers and clients can
    # connect to. Adding/removing nodes from this list has no impact on their
    # participation in ordering.
    # NOTE: In the solo case, this should be a one-item list.
    Addresses:
        - 127.0.0.1:7050

    # Batch Timeout: The amount of time to wait before creating a batch.
    BatchTimeout: 2s

    # Batch Size: Controls the number of messages batched into a block.
    BatchSize:

        # Max Message Count: The maximum number of messages to permit in a
        # batch.
        MaxMessageCount: 10

        # Absolute Max Bytes: The absolute maximum number of bytes allowed for
        # the serialized messages in a batch. If the "kafka" OrdererType is
        # selected, set 'message.max.bytes' and 'replica.fetch.max.bytes' on
        # the Kafka brokers to a value that is larger than this one.
        AbsoluteMaxBytes: 10 MB

        # Preferred Max Bytes: The preferred maximum number of bytes allowed
        # for the serialized messages in a batch. A message larger than the
        # preferred max bytes will result in a batch larger than preferred max
        # bytes.
        PreferredMaxBytes: 512 KB

    # Max Channels is the maximum number of channels to allow on the ordering
    # network. When set to 0, this implies no maximum number of channels.
    MaxChannels: 0

    Kafka:
        # Brokers: A list of Kafka brokers to which the orderer connects. Edit
        # this list to identify the brokers of the ordering service.
        # NOTE: Use IP:port notation.
        Brokers:
            - kafka0:9092


    # Organizations lists the orgs participating on the orderer side of the
    # network.
    Organizations:

    # Capabilities describes the orderer level capabilities, see the
    # dedicated Capabilities section elsewhere in this file for a full
    # description
    #Capabilities:
        #<<: *OrdererCapabilities
Application: &ApplicationDefaults
  
  Organizations:
  

  #Capabilities:
    #<<: *ApplicationCapabilities

Channel: &ChannelDefaults
  Capabilities:
      

Profiles:

  AcmeOrdererGenesis:
      <<: *ChannelDefaults
      Orderer:
          <<: *OrdererDefaults

          Organizations:
              - <<: *Orderer



      Application:
            <<: *ApplicationDefaults
            Organizations:
                - <<: *Org1


      Consortiums:
          AirlineConsortium:
            Organizations:
                  - <<: *Org1
                  
  AcmeChannel:
    Consortium: AirlineConsortium
    Application:
        <<: *ApplicationDefaults
        Organizations:
            - *Org1