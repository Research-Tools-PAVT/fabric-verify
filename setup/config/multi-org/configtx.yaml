################################################################################
#
#   CAPABILITIES
#
################################################################################
Capabilities:
    # Channel capabilities apply to both the orderers and the peers and must be
    # supported by both.  Set the value of the capability to true to require it.
    Channel: &ChannelCapabilities
        # V1.1 for Channel is a catchall flag for behavior which has been
        # determined to be desired for all orderers and peers running v1.0.x,
        # but the modification of which would cause incompatibilities.  Users
        # should leave this flag set to true.
        V1_1: true

    # Orderer capabilities apply only to the orderers, and may be safely
    # manipulated without concern for upgrading peers.  Set the value of the
    # capability to true to require it.
    Orderer: &OrdererCapabilities
        # V1.1 for Order is a catchall flag for behavior which has been
        # determined to be desired for all orderers running v1.0.x, but the
        # modification of which  would cause incompatibilities.  Users should
        # leave this flag set to true.
        V1_1: true

    # Application capabilities apply only to the peer network, and may be
    # safely manipulated without concern for upgrading orderers.  Set the value
    # of the capability to true to require it.
    Application: &ApplicationCapabilities
        # V1.2 for Application enables the new non-backwards compatible
        # features and fixes of fabric v1.2, it implies V1_1.
        V1_2: true
        # V1.1 for Application enables the new non-backwards compatible
        # features and fixes of fabric v1.1 (note, this need not be set if
        # V1_2 is set).
        V1_1: false
        # V1_1_PVTDATA_EXPERIMENTAL is an Application capability to enable the
        # private data capability.  It is only supported when using peers built
        # with experimental build tag.  When set to true, private data
        # collections can be configured upon chaincode instantiation and
        # utilized within chaincode Invokes.
        # NOTE: Use of this feature with non "experimental" binaries on the
        # network may cause a fork.
        V1_1_PVTDATA_EXPERIMENTAL: false
        # V1_1_RESOURCETREE_EXPERIMENTAL is an Application capability to enable
        # the resources capability. Currently this is needed for defining
        # resource-based access control (RBAC). RBAC helps set fine-grained
        # access control on system resources such as the endorser and various
        # system chaincodes. Default is v1.0-based access control based on
        # CHANNEL_READERS and CHANNEL_WRITERS.
        # NOTE: Use of this feature with non "experimental" binaries on
        # the network may cause a fork.
        V1_1_RESOURCETREE_EXPERIMENTAL: false
        # V1_2_CHAINCODE_LIFECYCLE_EXPERIMENTAL is an Application capability
        # to enable the new lifecycle semantics of "Install Code, Install
        # Metadata to a Channel, Define Chaincode, Init Chaincode"
        # This is an in development feature and is useful only for developer
        # testing at this time.
        V1_2_CHAINCODE_LIFECYCLE_EXPERIMENTAL: false
        
# Anchors for the organizations
Organizations:
  - &Orderer
    Name: Orderer
    ID: OrdererMSP
    MSPDir: ./crypto-config/ordererOrganizations/acme.com/msp
    Policies: &OrdererPolicies
      Readers:
          Type: Signature
          Rule: "OR('OrdererMSP.member')"
      Writers:
          Type: Signature
          Rule: "OR('OrdererMSP.member')"
      Admins:
          Type: Signature
          Rule: "OR('OrdererMSP.admin')"

  - &Acme
    Name: Acme
    ID: AcmeMSP
    MSPDir: ./crypto-config/peerOrganizations/acme.com/msp
    Policies: &AcmePolicies
      Readers:
          Type: Signature
          Rule: "OR('AcmeMSP.member')"
      Writers:
          Type: Signature
          Rule: "OR('AcmeMSP.member')"
      Admins:
          Type: Signature
          Rule: "OR('AcmeMSP.admin')"
    AnchorPeers:
      - Host: localhost
        Port: 7051

  - &Budget
    Name: Budget
    ID: BudgetMSP
    MSPDir: ./crypto-config/peerOrganizations/budget.com/msp
    Policies: &BudgetPolicies
      Readers:
          Type: Signature
          Rule: "OR('BudgetMSP.member')"
      Writers:
          Type: Signature
          Rule: "OR('BudgetMSP.member')"
      Admins:
          Type: Signature
          Rule: "OR('BudgetMSP.admin')"
          #Rule: "OUTOF(1,'BudgetMSP.admin')"
    AnchorPeers:
      - Host: localhost
        Port: 8051

  

# Configuration for the Orderer
Orderer: &OrdererDefaults

  OrdererType: solo

  Addresses:
    - localhost:7050

  # Batch Timeout: The amount of time to wait before creating a batch
  BatchTimeout: 2s

  # Batch Size: Controls the number of messages batched into a block
  BatchSize:
    MaxMessageCount: 10
    AbsoluteMaxBytes: 98 MB
    PreferredMaxBytes: 512 KB

  Policies:
    Readers:
        Type: ImplicitMeta
        Rule: "ANY Readers"
    Writers:
        Type: ImplicitMeta
        Rule: "ANY Writers"
    Admins:
        Type: ImplicitMeta  
        Rule: "MAJORITY Admins"
        #Rule: "ANY Admins"
    # BlockValidation specifies what signatures must be included in the block
    # from the orderer for the peer to validate it.
    BlockValidation:
        Type: ImplicitMeta
        Rule: "ANY Writers"
  Capabilities:
    <<: *OrdererCapabilities

Application: &ApplicationDefaults
  ACLs: &ACLsDefault
    # This section provides defaults for policies for various resources
    # in the system. These "resources" could be functions on system chaincodes
    # (e.g., "GetBlockByNumber" on the "qscc" system chaincode) or other resources
    # (e.g.,who can receive Block events). This section does NOT specify the resource's
    # definition or API, but just the ACL policy for it.
    #
    # User's can override these defaults with their own policy mapping by defining the
    # mapping under ACLs in their channel definition

    #---Lifecycle System Chaincode (lscc) function to policy mapping for access control---#

    # ACL policy for lscc's "getid" function
    lscc/ChaincodeExists: /Channel/Application/Readers

    # ACL policy for lscc's "getdepspec" function
    lscc/GetDeploymentSpec: /Channel/Application/Readers

    # ACL policy for lscc's "getccdata" function
    lscc/GetChaincodeData: /Channel/Application/Readers

    # ACL Policy for lscc's "getchaincodes" function
    lscc/GetInstantiatedChaincodes: /Channel/Application/Readers

    #---Query System Chaincode (qscc) function to policy mapping for access control---#

    # ACL policy for qscc's "GetChainInfo" function
    qscc/GetChainInfo: /Channel/Application/Readers

    # ACL policy for qscc's "GetBlockByNumber" function
    qscc/GetBlockByNumber: /Channel/Application/Readers

    # ACL policy for qscc's  "GetBlockByHash" function
    qscc/GetBlockByHash: /Channel/Application/Readers

    # ACL policy for qscc's "GetTransactionByID" function
    qscc/GetTransactionByID: /Channel/Application/Readers

    # ACL policy for qscc's "GetBlockByTxID" function
    qscc/GetBlockByTxID: /Channel/Application/Readers

    #---Configuration System Chaincode (cscc) function to policy mapping for access control---#

    # ACL policy for cscc's "GetConfigBlock" function
    cscc/GetConfigBlock: /Channel/Application/Readers

    # ACL policy for cscc's "GetConfigTree" function
    cscc/GetConfigTree: /Channel/Application/Readers

    # ACL policy for cscc's "SimulateConfigTreeUpdate" function
    cscc/SimulateConfigTreeUpdate: /Channel/Application/Readers

    #---Miscellanesous peer function to policy mapping for access control---#

    # ACL policy for invoking chaincodes on peer
    peer/Propose: /Channel/Application/Writers

    # ACL policy for chaincode to chaincode invocation
    peer/ChaincodeToChaincode: /Channel/Application/Readers

    #---Events resource to policy mapping for access control###---#

    # ACL policy for sending block events
    event/Block: /Channel/Application/Readers

    # ACL policy for sending filtered block events
    event/FilteredBlock: /Channel/Application/Readers
  Organizations:
  Policies: &ApplicationDefaultPolicies
    Readers:
        Type: ImplicitMeta
        Rule: "ANY Readers"
    Writers:
        Type: ImplicitMeta
        Rule: "ANY Writers"
    Admins:
        Type: ImplicitMeta
        #Rule: "ANY Admins"
        Rule: "MAJORITY Admins"
  Capabilities:
    <<: *ApplicationCapabilities

################################################################################
#
#   CHANNEL
#
#   This section defines the values to encode into a config transaction or
#   genesis block for channel related parameters.
#
################################################################################
Channel: &ChannelDefaults
  # Policies defines the set of policies at this level of the config tree
  # For Channel policies, their canonical path is
  #   
  
  
  Policies:
    # Who may invoke the 'Deliver' API
    Readers:
        Type: ImplicitMeta
        Rule: "ANY Readers"
    # Who may invoke the 'Broadcast' API
    Writers:
        Type: ImplicitMeta
        Rule: "ANY Writers"
    # By default, who may modify elements at this config level
    Admins:
        Type: ImplicitMeta
        Rule: "MAJORITY Admins"
        #Rule: "ANY Admins"

  # Capabilities describes the channel level capabilities, see the
  # dedicated Capabilities section elsewhere in this file for a full
  # description
  Capabilities:
    <<: *ChannelCapabilities
  

Profiles:

  AirlineOrdererGenesis:
      <<: *ChannelDefaults
      Orderer:
          <<: *OrdererDefaults
          Organizations:
              - <<: *Orderer
                Policies:
                  <<: *OrdererPolicies
                  #Admins:
                   #   Type: Signature
                    #  Rule: "OR('OrdererMSP.member')"

      Application:
            <<: *ApplicationDefaults

            Organizations:
                - <<: *Acme
                - <<: *Budget
                 



      Consortiums:

        AirlineConsortium:
            
            Organizations:
                  - <<: *Acme
                  - <<: *Budget
                                
                  
  AirlineChannel:
    <<: *ChannelDefaults
    Consortium: AirlineConsortium
        
    Application:
        <<: *ApplicationDefaults
        
        Organizations:
            - <<: *Acme
            - <<: *Budget
        


  